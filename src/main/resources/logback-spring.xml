<?xml version="1.0" encoding="UTF-8"?>

<configuration>

    <!--配置控制台输出-->
    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>
                %d -- %msg%n
            </pattern>
        </layout>
    </appender>

    <!--配置文件输出-->
    <appender name="fileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <encoder>
            <pattern>
                %d -- %msg%n
            </pattern>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>
                G:/log/info.%d.log
            </fileNamePattern>
        </rollingPolicy>
    </appender>

    <!--配置文件输出-->
    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>
                ERROR
            </level>
        </filter>
        <encoder>
            <pattern>
                %d -- %msg%n
            </pattern>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>
                G:/log/error.%d.log
            </fileNamePattern>
        </rollingPolicy>
    </appender>

    <!--应用配置-->
    <root level="info">
        <appender-ref ref="consoleLog"/>
        <appender-ref ref="fileInfoLog"/>
        <appender-ref ref="fileErrorLog"/>
    </root>

</configuration>

<!--<configuration>-->
    <!--attr:-->
        <!--<scan>: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true-->
        <!--<scanPeriod>: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。-->
        <!--<debug>: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。-->
    <!--chilren node:-->
        <!--<contextName>:用来设置上下文名称，每个logger都关联到logger上下文，默认上下文名称为default。但可以使用<contextName>设置成其他名字，用于区分不同应用程序的记录。一旦设置，不能修改。-->
        <!--<property>:用来定义变量值，它有两个属性name和value，通过<property>定义的值会被插入到logger上下文中，可以使“${}”来使用变量-->
        <!--<timestamp>:获取时间戳字符串，他有两个属性key和datePattern,遵循java.txt.SimpleDateFormat的格式-->
        <!--<appender>:负责写日志的组件，它有两个必要属性name和class。name指定appender名称，class指定appender的全限定名-->
            <!--ConsoleAppender:-->
                <!--输出到控制台:name="STDOUT" class="ch.qos.logback.core.ConsoleAppender"-->
                <!--chilren node:-->
                    <!--<encoder>:对日志进行格式化,-->
                    <!--<target>:字符串System.out(默认)或者System.err-->
            <!--FileAppender：-->
                <!--输出到文件:name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender"-->
                <!--chilren node:-->
        <!--　　　　    <file>：被写入的文件名，可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建，没有默认值。-->
            <!--　　　  <append>：如果是 true，日志被追加到文件结尾，如果是 false，清空现存文件，默认是true。-->
                  <!--　<encoder>：对记录事件进行格式化。（具体参数稍后讲解 ）-->
                    <!--<prudent>：如果是 true，日志会被安全的写入文件，即使其他的FileAppender也在向此文件做写入操作，效率低，默认是 false-->
        <!--RollingFileAppender：滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件-->
    <!--其他内容可以参考：https://www.cnblogs.com/sandea/p/7116751.html-->
    <!--或者：https://www.cnblogs.com/light-zhang/p/8744647.html-->